name: Release

on: [ workflow_dispatch ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: |
        cargo build --release

    - name: Get Latest Tag
      id: get_latest_tag
      run: |
        git fetch --tags
        latest_tag=$(git describe --tags --abbrev=0)
        echo ::set-output name=LATEST_TAG::$latest_tag

    - name: Bump Version
      id: bump_version
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.LATEST_TAG }}
        version=$(echo $latest_tag | sed 's/^v//')
        major=$(echo $version | cut -d '.' -f1)
        minor=$(echo $version | cut -d '.' -f2)
        patch=$(echo $version | cut -d '.' -f3)
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch"
        echo ::set-output name=NEW_VERSION::$new_version

    - name: Create Tag
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/v${{ steps.bump_version.outputs.NEW_VERSION }}',
            sha: context.sha
          })

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
        release_name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/your-binary-name
        asset_name: your-binary-name
        asset_content_type: application/octet-stream
